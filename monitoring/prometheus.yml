# Prometheus configuration for multi-cluster Kafka manager
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'multi-cluster-kafka'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "rules/*.yml"

# Scrape configurations
scrape_configs:
  # Multi-cluster manager metrics
  - job_name: 'multi-cluster-manager'
    static_configs:
      - targets: ['multi-cluster-manager:8001']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # PostgreSQL metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  # Redis metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s

  # Node exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s

  # Docker metrics
  - job_name: 'docker'
    static_configs:
      - targets: ['docker-exporter:9323']
    scrape_interval: 30s

  # Kafka cluster metrics (dynamic discovery)
  - job_name: 'kafka-clusters'
    file_sd_configs:
      - files:
        - '/etc/prometheus/kafka-targets.json'
        refresh_interval: 30s
    metrics_path: '/metrics'
    scrape_interval: 15s

  # JMX metrics from Kafka brokers
  - job_name: 'kafka-jmx'
    file_sd_configs:
      - files:
        - '/etc/prometheus/kafka-jmx-targets.json'
        refresh_interval: 30s
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: '/metrics'
    scrape_interval: 60s

# Remote write configuration (optional - for long-term storage)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 50GB
    wal-compression: true